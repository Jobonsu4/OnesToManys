package com.example.dogshelter.config;

import org.hibernate.boot.model.TypeContributions;
import org.hibernate.dialect.Dialect;
import org.hibernate.dialect.identity.IdentityColumnSupport;
import org.hibernate.dialect.identity.IdentityColumnSupportImpl;
import org.hibernate.service.ServiceRegistry;
import org.hibernate.type.BasicTypeRegistry;

import java.sql.Types;

 
public class SQLiteDialect extends Dialect {

    public SQLiteDialect() {
        super();

        // Column type mappings
        this.registerJdbcType(Types.BIT, "boolean");
        this.registerJdbcType(Types.INTEGER, "integer");
        this.registerJdbcType(Types.BIGINT, "bigint");
        this.registerJdbcType(Types.VARCHAR, "varchar");
        this.registerJdbcType(Types.FLOAT, "float");
        this.registerJdbcType(Types.DOUBLE, "double");
        this.registerJdbcType(Types.DATE, "date");
        this.registerJdbcType(Types.TIMESTAMP, "datetime");
    }

    @Override
    public IdentityColumnSupport getIdentityColumnSupport() {
        return new SQLiteIdentityColumnSupport();
    }

    @Override
    public boolean supportsLimit() {
        return true;
    }

    @Override
    public boolean supportsIfExistsBeforeTableName() {
        return true;
    }

    @Override
    public boolean supportsCascadeDelete() {
        return false;
    }

    @Override
    public String getDropTableString(String tableName) {
        return "drop table if exists " + tableName;
    }

    public static class SQLiteIdentityColumnSupport extends IdentityColumnSupportImpl {
        @Override
        public boolean supportsIdentityColumns() {
            return true;
        }

        @Override
        public String getIdentitySelectString(String table, String column, int type) {
            return "select last_insert_rowid()";
        }

        @Override
        public String getIdentityColumnString(int type) {
            return "integer";
        }
    }
}
